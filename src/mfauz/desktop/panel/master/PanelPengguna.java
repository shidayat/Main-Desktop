
/*
 * PanelPengguna.java
 *
 * Created by Sarip on Jan 19, 2014, 15:35:32 AM
 */
package mfauz.desktop.panel.master;

import com.artitraining.mfauz.model.Person;
import com.twmacinta.util.MD5;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.AbstractTableModel;
//import mfauz.desktop.Main;
import mfauz.desktop.Main;
import mfauz.desktop.frame.MainFrame;
import mfauz.desktop.util.TableUtil;
import mfauz.desktop.util.TextComponentUtils;

/**
 *
 * @author Sarip
 */
//public class PanelPengguna extends javax.swing.JComponent 
public class PanelPengguna extends javax.swing.JInternalFrame
    implements ListSelectionListener {
    public static final String PANEL_NAME = "Master Pengguna";
    private static PanelPengguna panelPengguna;
    private Person pengguna;
    private List<Person> listPengguna;
    
    /** Creates new form PanelRayon */
    public PanelPengguna() {
        initComponents();
        defaultButton();
        clearForm();
        enableForm(false);   
        updatePengguna();
          TextComponentUtils.setAutoUpperCaseText(30, txtNama);
    }
    
    public static PanelPengguna getPanelPengguna() {
        if(panelPengguna==null) {
            panelPengguna = new PanelPengguna();
        }
        return panelPengguna;
    }
    
    private void defaultButton() {
    btnTambah.setEnabled(true);
    btnEdit.setEnabled(false);
    btnDelete.setEnabled(false);
    btnSimpan.setEnabled(false); 
    btnKeluar.setEnabled(true);
 
}
    
private void editButton() {
    btnTambah.setEnabled(false);
    btnEdit.setEnabled(false);
    btnDelete.setEnabled(false);
    btnSimpan.setEnabled(true); 
    btnKeluar.setEnabled(true);
 
}

private void selectButton() {
    btnTambah.setEnabled(false);
    btnEdit.setEnabled(true);
    btnDelete.setEnabled(true);
    btnSimpan.setEnabled(false); 
    btnKeluar.setEnabled(true);
 
}

private void enableForm(Boolean status) {
    txtIdPengguna.setEnabled(status);
    txtNama.setEnabled(status);
    fieldPassword.setEnabled(status);
}

    private void clearForm(){
        txtIdPengguna.setText("");
        txtNama.setText("");
        fieldPassword.setText("");
        pengguna = null;
    }

   private void loadModelToForm() {
        txtIdPengguna.setText(String.valueOf(pengguna.getPersonId()));
        txtNama.setText(pengguna.getNama());
        fieldPassword.setText(pengguna.getPassword());
    }
        
     private void updatePengguna() {
        listPengguna = Main.getAppService().findAllPerson();
        tblPengguna.setModel(new PenggunaTableModel(listPengguna));
        tblPengguna.setAutoCreateColumnsFromModel(true);
        tblPengguna.getSelectionModel().addListSelectionListener(this);  
        TableUtil.autoResizeColumn(tblPengguna);
    }     
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPengguna = new javax.swing.JTable();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        fieldPassword = new javax.swing.JPasswordField();
        txtIdPengguna = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCariKeyPressed(evt);
            }
        });

        tblPengguna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id User", "Nama Lengkap"
            }
        ));
        tblPengguna.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(tblPengguna);

        btnTambah.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfauz/desktop/image/add.png"))); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        btnTambah.setMargin(new java.awt.Insets(5, 14, 2, 14));
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfauz/desktop/image/edit.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSimpan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfauz/desktop/image/disket kuning.png"))); // NOI18N
        btnSimpan.setText("Simpan");
        btnSimpan.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfauz/desktop/image/kurang_1.png"))); // NOI18N
        btnDelete.setText("Hapus");
        btnDelete.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnKeluar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfauz/desktop/image/panah kanan_2.png"))); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        btnBatal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfauz/desktop/image/kali_1.png"))); // NOI18N
        btnBatal.setText("Batal");
        btnBatal.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setText("Sandi");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel7.setText("Nama Lengkap");

        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });

        fieldPassword.setText("jPasswordField1");

        txtIdPengguna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdPenggunaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel8.setText("ID Pengguna");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnKeluar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBatal))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIdPengguna, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                            .addComponent(txtNama, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                            .addComponent(fieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCari, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBatal, btnDelete, btnEdit, btnKeluar, btnSimpan, btnTambah});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSimpan)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(btnKeluar)
                    .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdPengguna, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(fieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBatal, btnDelete, btnEdit, btnKeluar, btnSimpan, btnTambah});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel4, txtNama});

    }// </editor-fold>//GEN-END:initComponents

private void simpanAction() {
    
    if(validateForm()){
     try {       
        if (pengguna==null) {
            pengguna=new Person();
            loadFormToModel();    
            Main.getAppService().savePerson(pengguna);           
//            } else{
//            loadFormToModelEdit();
            }  
    
        } catch (Exception ex) {
             ex.printStackTrace();
             JOptionPane.showMessageDialog(this, "Data Pengguna Gagal Disimpan! "+
             "\nPengguna telah ada di DataBase = "+pengguna.getNama()
            ,"Error",JOptionPane.ERROR_MESSAGE);
             clearForm();
             enableForm(false);
             return;
            }
        defaultButton();
        clearForm();
        enableForm(false);
        updatePengguna();
        JOptionPane.showMessageDialog(this, "Data PENGGUNA TELAH DISIMPAN!",
                "Konfirmasi", JOptionPane.INFORMATION_MESSAGE);
    }
    pengguna=null;   //agar setelah save pd mode edit, action simpan siap dr null. kalotidak, dia akan mengedit
    updatePengguna();
}


private Boolean validateForm(){
        if(txtIdPengguna.getText().length()>0 &&
                txtNama.getText().length()>0 &&
                fieldPassword.getPassword()!=null &&
                fieldPassword.getPassword().length>0){
            return true;
        } else {
            JOptionPane.showMessageDialog(MainFrame.getInstance(), "Isi semua field!","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
}

private void loadFormToModelEdit(){
//    if(pengguna!=null){
//    pengguna.setNamaLengkap(txtNama.getText());
//    pengguna.setListPenggunaPerans(String.valueOf(listPenggunaPeran.get());
//    fieldPassword
//            buat MD nya
    
//    }
//    Main.getAppService().savePengguna(pengguna);
    }
    

private void loadFormToModel(){
    pengguna.setPersonId(Integer.parseInt(txtIdPengguna.getText()));
    pengguna.setNama(txtNama.getText());
    String kataSandi = new MD5(new String(fieldPassword.getPassword())).asHex();
        if(pengguna!=null && !kataSandi.equals(pengguna.getPassword())){

           pengguna.setPassword(kataSandi);
        }
}

private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
}//GEN-LAST:event_txtCariActionPerformed



private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyPressed
    if(evt.getKeyChar()==KeyEvent.VK_ENTER) {
        listPengguna = Main.getAppService()
                .findAllPerson();
                //nggak boleh query lagi <yang pake List>
                tblPengguna.setModel(new PenggunaTableModel(listPengguna)); //ini yg menampilkan dari DB ke panel
                tblPengguna.setAutoCreateColumnsFromModel(true);
                tblPengguna.getSelectionModel().addListSelectionListener(this);    
                TableUtil.autoResizeColumn(tblPengguna);
    }
}//GEN-LAST:event_txtCariKeyPressed

private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed

}//GEN-LAST:event_txtNamaActionPerformed

    private void txtIdPenggunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdPenggunaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdPenggunaActionPerformed
           
        
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed

        if (pengguna != null) {
            listPengguna = Main.getAppService().findAllPerson();
            loadModelToForm();
            pengguna.setPersonId(pengguna.getPersonId());
            txtNama.setEnabled(true);
            fieldPassword.setEnabled(true);
            editButton();
            //harus klik button simpan. kalo tidak: tak ada jeda tuk input editan
        } else {
            pengguna = null;
            clearForm();
            updatePengguna();
            return;
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
                if (pengguna != null) {int message = JOptionPane.showConfirmDialog(this, "YAKIN AKAN MENGHAPUS DATA PENGGUNA???",
                        "KONFIRMASI ", JOptionPane.YES_NO_OPTION);            
                if (message == 0) { Main.getAppService().deletePerson(pengguna);  
                defaultButton();                
                clearForm();                
                enableForm(false);              
                pengguna = null;                 
                updatePengguna();   }      
                } else {JOptionPane.showMessageDialog(this, "Tidak ada data yang dipilih!",                     
                        "Kesalahan", JOptionPane.ERROR_MESSAGE);         }     
    }//GEN-LAST:event_btnDeleteActionPerformed

private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
 // TODO add your handling code here:
    editButton();        
    enableForm(true);       
    txtIdPengguna.requestFocusInWindow();     

}//GEN-LAST:event_btnTambahActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        MainFrame.getInstance().removeInternalFrame(this);
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        simpanAction();     
        updatePengguna();     
    }//GEN-LAST:event_btnSimpanActionPerformed

private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
 // TODO add your handling code here:
    clearForm();         
    defaultButton();         
    enableForm(false);         
    pengguna = null; //SPY MENGEMBALIKAN NILAI NULL, SAAT BATAL         
    updatePengguna();    
}//GEN-LAST:event_btnBatalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambah;
    private javax.swing.JPasswordField fieldPassword;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPengguna;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtIdPengguna;
    private javax.swing.JTextField txtNama;
    // End of variables declaration//GEN-END:variables

public class PenggunaTableModel extends AbstractTableModel{
    private List<Person> listPengguna;
    private String[] HEADER = new String[] {"ID", "NAMA LENGKAP "};
   
    public PenggunaTableModel(List<Person> listPengguna) {
        this.listPengguna = listPengguna;
    }
    
    
    @Override
    public int getRowCount() {
        return listPengguna.size();   // size untuk tipe List
    }

    @Override
    public int getColumnCount() {
        return HEADER.length;   //length untuk tipe array
    }
    
    @Override
    public String getColumnName(int column){
        return HEADER[column];
    }

    
    @Override
    public Object getValueAt(int rowIndex, int columnIndex) {
      Person p = listPengguna.get(rowIndex);
      switch(columnIndex){
          
          case 0:
              return p.getPersonId();
          case 1:
              return p.getNama();
          default:
              
              return "";
      }
    }
    
 
    @Override
    public Class<?> getColumnClass(int columnIndex) {
        switch(columnIndex) {
            case 0:
                  return int.class ;
//            case 1:
//            case 2:    
//                return String.class;
        }
        return String.class;
    }
    }    
    
    @Override
    public void valueChanged(ListSelectionEvent e) {
          if(e.getValueIsAdjusting()) {
                return;
              }
        if(tblPengguna.getSelectedRow() >=0) {
            pengguna = listPengguna.get(tblPengguna.getSelectedRow());
            loadModelToForm();
            enableForm(false);
            selectButton();
        }
    }
}
